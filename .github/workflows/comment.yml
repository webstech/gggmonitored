name: Process slash command
# vars to pass
# needed for /submit if not in config
#    - GITGITGADGET_MAILREPO_NAME: "gggmail"
#    - GITGITGADGET_MAILREPO_OWNER: "webstech"
#    - GITGITGADGET_MAILREPO_HOST: "github.com"
#    - GITGITGADGET_MAIL_AUTHOR: "gitter"
# Missing pieces to set general values:
#    - GITGITGADGET_CONFIG: "../config.json"
#      needs to support files or reference to a file on github that can be retrieved
#      workflow/action would need to retreive if it is a url
#    - GIT_AUTHOR_NAME: ${{ env.{{ secrets.AUTHOR }}
#      do these really need to be monitored repo specfic?
#    - GIT_AUTHOR_EMAIL: ${{ env.{{ secrets.EMAIL }}
# Missing pieces that are mail related and needed for submit but should be private
#    - could be config: gitgitgadget.smtpUser joe_user@example.com
#    - could be config: gitgitgadget.smtpHost localhost
#    - could not be config: gitgitgadget.smtpPass secret
#    - gitgitgadget.smtpOpts "{port: 1025, secure:true, tls: {rejectUnauthorized: false}}"

# Add flag for config needs to be regenerated (with updates)

on:
   issue_comment:
    types: [created]

jobs:
  dispatchCommand:
    runs-on: ubuntu-latest
    env:
      # These should come from secrets?
      GITGITGADGET_MAILREPO_NAME: "gggmail"

      GITGITGADGET_MAILREPO_OWNER: "webstech"
      GITGITGADGET_MAILREPO_HOST: "github.com"
      GITGITGADGET_MAIL_AUTHOR: "gitter"
      GITGITGADGET_CONFIG: "../config.json"
      # GIT_AUTHOR_NAME: ${{ env.GITGITGADGET_MAIL_AUTHOR }}
      # GIT_AUTHOR_EMAIL: ${{ env.GITGITGADGET_MAIL_AUTHOR }}@fakehost.com

    steps:
    - name: Slash Command Dispatch
      uses: peter-evans/slash-command-dispatch@v2.3.0
      with:
        token: ${{ secrets.RUNNER_TOKEN }}
        commands: |
          submit
          preview
          allow
          disallow
          cc
        issue-type: pull-request
        reactions: false
        # dispatch-type: workflow
        repository: webstech/ggguser
        static-args: |
          mail-name=${{ env.GITGITGADGET_MAILREPO_NAME }}
          mail-owner=${{ env.GITGITGADGET_MAILREPO_OWNER }}
          mail-host=${{ env.GITGITGADGET_MAILREPO_HOST }}
          mail-author=${{ env.GITGITGADGET_MAIL_AUTHOR }}
          config=${{ env.GITGITGADGET_CONFIG }}
          regen-config=true
          exports=${{ toJson(env) }}
